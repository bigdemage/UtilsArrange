<#assign className = table.className>   
<#assign classNameLower = className?uncap_first> 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${basepackage}.core.dao.mapper.${namespace}.${className}Mapper">
	<!-- ${table.remarks} -->
    <resultMap id="${classNameLower}BaseMap" type="${basepackage}.pojo.${namespace}.${className}">
        <#list table.columns as column>
         <!-- ${column.remarks} -->
        <result property="${column.columnNameLower}" column="${column.sqlName}"/>
		</#list>
		<!-- 创建人名称 -->
        <result property="createName" column="create_name"/>
        <!-- 修改人名称 -->
        <result property="updateName" column="update_name"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="${classNameLower}Columns">
	    <![CDATA[
        <#list table.columns as column>${column.sqlName} <#if column_has_next>,</#if></#list>
	    ]]>
	</sql>
	
    <insert id="insert" parameterType="${basepackage}.pojo.${namespace}.${className}" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO ${table.sqlName} (
        <#list table.columns as column>
        	${column.sqlName} <#if column_has_next>,</#if>
        </#list>
        ) VALUES (
        <#list table.columns as column>
        	${r'#'}${r'{'}${column.columnNameLower}${r'}'} <#if column_has_next>,</#if>
        </#list>        
        )
    ]]>
    </insert>
    
	<!--更新记录  -->
    <update id="update" parameterType="${basepackage}.pojo.${namespace}.${className}">
        UPDATE ${table.sqlName} 
        <set>
	        <#list table.notPkColumns as column>
	        	<if test="${column.columnNameLower} != null and ${column.columnNameLower} != ''">	
	        		${column.sqlName} = ${r'#'}${r'{'}${column.columnNameLower}${r'}'} <#if column_has_next>,</#if>
	        	</if>
	        </#list>
	    </set>
        WHERE 
        	<#list table.compositeIdColumns as column>
	        	${column.sqlName} = ${r'#'}${r'{'} ${column.columnNameLower}${r'}'} <#if column_has_next> AND </#if>
	        </#list>
    </update>
	<!--删除记录  -->
    <delete id="delete" >
        DELETE FROM ${table.sqlName} 
        WHERE id =${r'#'}${r'{'}id${r'}'}
    </delete>
    
     <!-- 删除多条记录 -->
    <delete id="deletes" >
		  DELETE FROM ${table.sqlName} 
		  WHERE id in
			<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		 	  ${r'#'}${r'{'}item${r'}'}
			</foreach>
	</delete>
    
    <!-- 分页查询 -->
   <select id="find${className}ListByPage" parameterType="java.util.Map" resultMap="${classNameLower}BaseMap">
		select 
    	 <#list table.columns as column> t.${column.sqlName} <#if column_has_next>,</#if></#list>
    	 ,uc.username create_name, up.username update_name
    	from  ${table.sqlName} t
    	LEFT JOIN t_user uc ON uc.id = t.create_id
		LEFT JOIN t_user up ON up.id = t.update_id
	</select>
	
	<!-- 通过id查询 -->
	<select id="find${className}ById" resultMap="${classNameLower}BaseMap">
		select <include refid="${classNameLower}Columns"/>  
		from ${table.sqlName}  t where t.id=${r'#'}${r'{'}id${r'}'};
	</select>
	
	<!-- 通过ID、状态进行查询 -->
	<select id="find${className}ByIdAndStatus" parameterType="java.util.Map" resultMap="${classNameLower}BaseMap">
		select 
			<include refid="${classNameLower}Columns"/>  
		from ${table.sqlName} 
		<where> 
        	<if test="id != null and id != '' ">	
        		id = ${r'#'}${r'{'}id${r'}'}
        	</if>
        	<if test="enables != null and enables != '' ">	
        		and enables = ${r'#'}${r'{'}enables${r'}'}
        	</if>
		</where>
	</select>
	
    <!-- 同时修改多条记录状态 -->
       <update id="updateEnables" >
        UPDATE ${table.sqlName}  
        <set>
            update_time = now()
            ,enables = ${r'#'}${r'{'}enables${r'}'}
        	<if test="updateId != null and updateId != '' ">
        		,update_id = ${r'#'}${r'{'}updateId${r'}'}
        	</if>
	    </set>
        WHERE id in
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
	 	  ${r'#'}${r'{'}item${r'}'}
		</foreach>
    </update>
</mapper>
